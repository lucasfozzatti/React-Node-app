{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fozza\\\\mern-stack-app\\\\mern-crud-tasks-master\\\\frontend\\\\src\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport Budget from \"./budget\";\nimport './css/User_log.css';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  console.log(\"Login\");\n\n  const alerta = () => {\n    swal({\n      title: 'Enter username and password',\n      icon: 'warning',\n      button: 'OK'\n    });\n  };\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState(''); // const [id, setid] = useState(0);\n\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  const login = async e => {\n    e.preventDefault();\n\n    if (!username || !password) {\n      alerta();\n    } else {\n      console.log(\"Login\");\n      await Axios.post('http://localhost:4000/login', {\n        username: username,\n        password: password\n      }).then(response => {\n        if (!response.data.auth) {\n          setLoginStatus(false);\n        } else {\n          localStorage.setItem(\"token\", response.data.token);\n          setLoginStatus(true);\n          Router.browserHistory.Push('/somepath');\n        }\n      });\n    }\n  };\n\n  const userAuthenticated = e => {\n    e.preventDefault();\n    Axios.get('http://localhost:4000/isUserAuth', {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"log-input\",\n      placeholder: \"  Ej: Lucas23423\",\n      onChange: e => {\n        setUsername(e.target.value);\n        console.log(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"log-input\",\n      placeholder: \"  123456\",\n      onChange: e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-log\",\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), loginStatus === true ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: userAuthenticated,\n      children: \"Check if Authenticated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No authenticated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"+ZnEvzSJz8P9kHYWr6n/je8vI8Y=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/fozza/mern-stack-app/mern-crud-tasks-master/frontend/src/Login.js"],"names":["React","useState","Axios","Budget","swal","Login","console","log","alerta","title","icon","button","username","setUsername","password","setPassword","loginStatus","setLoginStatus","login","e","preventDefault","post","then","response","data","auth","localStorage","setItem","token","Router","browserHistory","Push","userAuthenticated","get","headers","getItem","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAIA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAMC,MAAM,GAAC,MAAI;AACfJ,IAAAA,IAAI,CAAC;AACHK,MAAAA,KAAK,EAAE,6BADJ;AAEHC,MAAAA,IAAI,EAAE,SAFH;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAAD,CAAJ;AAIG,GALL;;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAT4B,CAU5B;;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMiB,KAAK,GAAG,MAAMC,CAAN,IAAY;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,CAACR,QAAD,IAAa,CAACE,QAAjB,EAA2B;AACzBN,MAAAA,MAAM;AACP,KAFD,MAEK;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAML,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAAyC;AAC3CT,QAAAA,QAAQ,EAAEA,QADiC;AAE3CE,QAAAA,QAAQ,EAAEA;AAFiC,OAAzC,EAIHQ,IAJG,CAIGC,QAAD,IAAc;AACpB,YAAI,CAACA,QAAQ,CAACC,IAAT,CAAcC,IAAnB,EAAyB;AACvBR,UAAAA,cAAc,CAAC,KAAD,CAAd;AACD,SAFD,MAEO;AACLS,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACC,IAAT,CAAcI,KAA5C;AACAX,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAY,UAAAA,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2B,WAA3B;AAED;AACF,OAbK,CAAN;AAcH;AAAC,GArBF;;AAsBA,QAAMC,iBAAiB,GAAIb,CAAD,IAAM;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,KAAK,CAAC+B,GAAN,CAAU,kCAAV,EAA6C;AAC3CC,MAAAA,OAAO,EAAE;AACL,0BAAkBR,YAAY,CAACS,OAAb,CAAqB,OAArB;AADb;AADkC,KAA7C,EAGGb,IAHH,CAGSC,QAAD,IAAY;AACnBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACD,KALA;AAMD,GARD;;AAUA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,WAA7B;AAAyC,MAAA,WAAW,EAAC,kBAArD;AACA,MAAA,QAAQ,EAAGJ,CAAD,IAAK;AACbN,QAAAA,WAAW,CAACM,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAX;AACA/B,QAAAA,OAAO,CAACC,GAAR,CAAYY,CAAC,CAACiB,MAAF,CAASC,KAArB;AACH;AAJC;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,WAAjC;AAA6C,MAAA,WAAW,EAAE,UAA1D;AACA,MAAA,QAAQ,EAAGlB,CAAD,IAAK;AACbJ,QAAAA,WAAW,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAX;AACH;AAHC;AAAA;AAAA;AAAA;AAAA,YAVJ,eAgBI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAgC,MAAA,OAAO,EAAEnB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,EAiBKF,WAAW,KAAK,IAAhB,gBACE;AAAQ,MAAA,OAAO,EAAEgB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH;;GAzEuB3B,K;;KAAAA,K","sourcesContent":["import React from \"react\"\r\nimport { useState} from \"react\";\r\nimport Axios  from \"axios\";\r\nimport Budget from \"./budget\"\r\nimport './css/User_log.css'\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nexport default function Login() {\r\n    console.log(\"Login\")\r\n    const alerta=()=>{\r\n      swal({\r\n        title: 'Enter username and password',\r\n        icon: 'warning',\r\n        button: 'OK',\r\n      })}\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const [id, setid] = useState(0);\r\n    const [loginStatus, setLoginStatus] = useState(false);\r\n    \r\n    const login = async(e) => {\r\n        e.preventDefault()\r\n        \r\n        if(!username || !password ){\r\n          alerta()\r\n        }else{\r\n        console.log(\"Login\")\r\n        await Axios.post('http://localhost:4000/login',{\r\n            username: username,\r\n            password: password,\r\n\r\n        }).then((response) => {\r\n          if (!response.data.auth) {\r\n            setLoginStatus(false);\r\n          } else {\r\n            localStorage.setItem(\"token\", response.data.token)\r\n            setLoginStatus(true);\r\n            Router.browserHistory.Push('/somepath');\r\n\r\n          }\r\n        });\r\n    }};\r\n    const userAuthenticated = (e) =>{\r\n      e.preventDefault()\r\n      Axios.get('http://localhost:4000/isUserAuth',{\r\n        headers: {\r\n            \"x-access-token\": localStorage.getItem(\"token\"),\r\n     }}).then((response)=>{\r\n       console.log(response);\r\n     })\r\n    }\r\n   \r\n    return (\r\n      <React.Fragment>\r\n          \r\n          <label htmlFor=\"email\">Username</label>\r\n          <input type=\"text\" className=\"log-input\" placeholder=\"  Ej: Lucas23423\"\r\n          onChange={(e)=>{\r\n            setUsername(e.target.value);\r\n            console.log(e.target.value)\r\n        }}\r\n          />\r\n          <label htmlFor=\"password\">password</label>\r\n          <input type=\"password\" className=\"log-input\" placeholder= \"  123456\" \r\n          onChange={(e)=>{\r\n            setPassword(e.target.value);\r\n        }}\r\n          />\r\n          \r\n          <button className=\"button-log\"  onClick={login}>Login</button>\r\n          {loginStatus === true \r\n            ?<button onClick={userAuthenticated}>Check if Authenticated</button>\r\n            : <h1>No authenticated</h1>\r\n          }\r\n        \r\n      </React.Fragment>\r\n  );\r\n    \r\n    \r\n       \r\n}"]},"metadata":{},"sourceType":"module"}